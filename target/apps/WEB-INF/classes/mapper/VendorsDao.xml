<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
	<mapper namespace="com.ugo.dao.VendorsDao">
	
    <!-- 目的：为dao接口方法提供sql语句配置 -->
    <!-- 获取设备信息 -->
    <select id="getList" resultType="Vendors">
        SELECT * FROM vendors ORDER BY id DESC
    </select>
    
    <!-- 查询未投放的设备 -->
    <select id="getNotSetList" resultType="Vendors">
        SELECT * FROM vendors WHERE id NOT IN (SELECT vendor_id FROM node_vms ) 
    </select>
	
	<!-- 获取设备 -->
    <select id="getVendors" resultType="Vendors">
        SELECT * FROM vendors where id = #{id}
    </select>
	
	<!-- 新增设备 -->
	<insert id="addVendors" parameterType="Vendors" useGeneratedKeys="true" keyProperty="id">
		insert into vendors (
			nameplate,password,type,producer,created_at
		)values(#{nameplate},#{password},#{type},#{producer},NOW())
	</insert>
	
	<!-- 查询设备对应的点位 -->
	<select id="getVendorsNode" parameterType="int" resultType="Vendors">
        SELECT node_id,node_name,state AS nodeState FROM node_vms where vendor_id = #{id}
    </select>
    
    <!-- mqttuser -->
    <insert id="addMqUser" parameterType="MqttUser">
    	INSERT INTO mqtt_user (
		  is_superuser,
		  username,
		  PASSWORD,
		  created
		) 
		VALUES
		  (0,
		  #{username},#{password},NOW()) 
    </insert>
    <!-- mqttacl -->
    <insert id="addMqAcl" parameterType="MqttAcl">
    	INSERT INTO mqtt_acl (
		  allow,
		  username,
		  clientid,
		  access,
		  topic
		) 
		VALUES
		  (1,
		  #{username},#{clientid},3,#{topic})
    </insert>
    
    <!-- 查询设备状态 -->
    <select id="getVendorState" parameterType="int" resultType="int">
    	SELECT 
		  state 
		FROM
		  vendors 
		WHERE id = #{id} 
    </select>
    
    <!-- 修改设备状态 -->
    <update id="updateVendorState">
    	UPDATE 
		  vendors 
		SET
		  state = #{state},
		  updated_at = NOW()
		WHERE id = #{id}
    </update>
    
     <!-- 修改点位设备状态 -->
    <update id="updateNodeVmsState">
    	UPDATE 
		  node_vms 
		SET
		  state = #{state} 
		WHERE vendor_id = #{vendorId}
    </update>
    
    <!-- 设备端匹配数据 -->
    <select id="findVendorsByIdAndPwd" resultType="Vendors">
    	SELECT 
		  vs.*,nv.node_id as nodeId,nv.node_name as nodeName 
		FROM
		  vendors vs,node_vms nv
		WHERE vs.id = #{id} 
		  AND vs.password = #{password}
		  and vs.id = nv.vendor_id
		   
    </select>
    
</mapper>